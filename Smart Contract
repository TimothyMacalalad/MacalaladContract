# SmartContract
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract TheNumberGame {
    address public owner;
    uint256 public winningNumber;
    bool public gameEnded;

    event GameEnded(address indexed winner, uint256 winningNumber);

    constructor() {
        owner = msg.sender;
        winningNumber = 42; // Initial winning number
        gameEnded = false;
    }

    function guess(uint256 number) public {
        require(!gameEnded, "Game has ended");

        // Check if the guessed number matches the winning number
        if (number == winningNumber) {
            gameEnded = true;
            emit GameEnded(msg.sender, winningNumber);
        }
    }

    function setWinningNumber(uint256 number) public {
        require(msg.sender == owner, "Only owner can set the winning number");
        require(!gameEnded, "Game has already ended");

        winningNumber = number;
    }

    function assertExample(uint256 a, uint256 b) public pure returns (uint256) {
        assert(a + b <= 100);
        return a + b;
    }
